How to search for repository objects:
    SE84 - Access ABAP Repository Information System (also accessed through SE80?)
            Access Program Library
                Access Programs, here we can search, display and execute programs.
                
    SE81 - Application Hierarchy

Abap Workbench includes all tools required for creating and editing
repository objects, covering the entire software developing cycle:
    SE38 - ABAP Editor: editing the source code
    SE11 - ABAP Dictionary: editing table definitions, data types, ...
    SE51 - Screen Painter: configuring screens with functions in user dialogs
    SE41 - Menu Painter: designing user interface components
    SE37 - Function builder: maintaining function modules
    SE24 - Class builder: maintaining global classes and interfaces

Creating a package:
    Access SE80 Object Navigator
        In the drop-down menu, select Package, enter package name and press return
        In the dialog box, enter a short description of your package. Assign the
            package to an application component and a software component
    In the following dialog box, assign the package to a change request
        (or create a new change request in the sheet icon)

Creating a transaction:
    Access SE80 Object Navigator
        Right click on your program, 'Create' -> 'Transaction'
        Define a transaction code
        Enter a short text
        Select 'Program and Selection Screen (Report Transaction)'
            Select the program name
            Choose 'Professional User Transaction'
            Select 'SAP GUI for Windows'
        Assign the trx to a package and to a change request

Loop types:
    DO.
        *statements* (loop counter: sy-index)
    IF <abort_condition>. EXIT. ENDIF.

    DO n TIMES.
        *statements* (loop counter: sy-index)
    ENDDO.

    WHILE <condition>.
        *statements* (loop counter: sy-index)
    ENDWHILE.

    SELECT ... FROM <dbtab> ....
        statements* (Database table rows: sy-dbcnt)
    ENDSELECT.

    LOOP AT <internal table> ....
        statements* (Row index for internal table: sy-tabix)
    ENDLOOP.

Useful System Fields:
    sy-mandt: Logon client
    sy-uname: Logon username
    sy-langu: Logon user language
    sy-datum: Local ABAP system date
    sy-uzeit: Local ABAP system time
    sy-tcode: Current tansaction code
    sy-repid: Current ABAP program
    sy-index: Loop counter at DO and WHILE
    sy-subrc: Indicate whether the statement could be executed succesfully (sy-subrc = 0)



